pub fn exec(string command) -> int:
    $raw (
        return system(command);
    )

pub fn exit(int code):
    $raw (
        exit(code);
    )

pub fn cwd() -> char*:
    $raw (
        char *buffer = getcwd(NULL, 0);
        char *result = buffer;
        return result;
    )

pub fn chdir(string path) -> int:
    $raw (
        return chdir(path);
    )

pub fn homedir() -> char*:
    $raw (
        char *home = getenv("HOME");
        if (home == NULL) {
            home = getenv("USERPROFILE");
        }
        return home ? strdup(home) : NULL;
    )

pub fn get_env(string name) -> char*:
    $raw (
        char *value = getenv(name);
        return value ? strdup(value) : NULL;
    )

pub fn tempdir() -> char*:
    $raw (
        char *temp = getenv("TMPDIR");
        if (temp == NULL) {
            temp = getenv("TEMP");
        }
        if (temp == NULL) {
            temp = getenv("TMP");
        }
        return temp ? strdup(temp) : NULL;
    )

pub fn get_args() -> list[string]:
    $raw (
        extern int __global_argc;
        extern char** __global_argv;
        
        for (int _i = 0; _i < __global_argc && _i < _max_size; _i++) {
            strcpy(_output_array[_i], __global_argv[_i]);
        }
        return __global_argc;
    )
