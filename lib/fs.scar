import "std/strings"

pub fn exists(string path) -> bool:
    $raw (
        return access(path, F_OK) == 0;
    )

pub fn remove(string path) -> bool:
    $raw (
        return unlink(path) == 0;
    )

pub fn read_lines(string filename) -> list[string]:
    $raw (
        char** lines_temp = malloc(1000 * sizeof(char*));
        int lines_count = 0;
        FILE* file = fopen(filename, "r");
        if (file == NULL) {
            for (int _i = 0; _i < lines_count && _i < _max_size; _i++) {
                strcpy(_output_array[_i], "");
            }
            free(lines_temp);
            return 0;
        }
        char line_buffer[1024];
        while (fgets(line_buffer, sizeof(line_buffer), file) && lines_count < 1000) {
            size_t len = strlen(line_buffer);
            if (len > 0 && line_buffer[len-1] == '\n') {
                line_buffer[len-1] = '\0';
            }    
            lines_temp[lines_count] = malloc(strlen(line_buffer) + 1);
            strcpy(lines_temp[lines_count], line_buffer);
            lines_count++;
        }
        fclose(file);
        for (int _i = 0; _i < lines_count && _i < _max_size; _i++) {
            strcpy(_output_array[_i], lines_temp[_i]);
            free(lines_temp[_i]);
        }
        free(lines_temp);
        return lines_count;
    )
